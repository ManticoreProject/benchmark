#!/bin/bash
#
# COPYRIGHT (c) 2008 The Manticore Project (http://manticore.cs.uchicago.edu)
# All rights reserved.
#
# See the README file for instructions.

RESULTS_DIR="@MANTI_BENCH_RESULTS@"
SCRIPTS_DIR="@MANTI_BENCH_SCRIPTS@"
SMLNJ_CMD="@SMLNJ_CMD@"
SMLNJ_VERSION="@SMLNJ_VERSION@"
SIZE=""
BENCHMARK_EXE=""
EXPERIMENT_NAME="experiment"
DESCRIPTION=""
GEN_GC_STATS="@GEN_GC_STATS@"
GEN_LOG="@GEN_LOG@"
PMLCFLAGS="@PMLCFLAGS@"
NUM_TRIALS="1"

usage="See the README file for instructions"

while getopts ":s:f:n:d:t:" options; 
do
    case $options in
	s ) SIZE="$OPTARG";;
	f ) BENCHMARK_EXE="$OPTARG";;
	n ) EXPERIMENT_NAME="$OPTARG";;
	d ) DESCRIPTION="$OPTARG";;
	t ) NUM_TRIALS="$OPTARG";;
	\? ) echo $usage
            exit 1;;
	* ) echo $usage
            exit 1;;
    esac
done

if [ ! -w "$BENCHMARK_EXE" ]; then
    echo "Need a path to the benchmark executable"
fi

# Gather metadata

function metadata {
    echo -e "val $1 = $2" >> $LOG_FILE
}

function metadata_list {
    echo -e "val $2 = " >> $LOG_FILE
    for x in $1
    do
	echo -n -e " $x :: " >> $LOG_FILE
    done
    echo -e "nil" >> $LOG_FILE
}

DATETIME=$( date +"%F-%H-%M-%S" )
LOG_FILE=$RESULTS_DIR/$EXPERIMENT_NAME-$DATETIME.sml
DATETIME_SML=${DATETIME//-/_}
DATETIME_MD=$( date +"%F %H:%M:%S" )

SCRIPT_SVN_REVISION=$( svn info | grep Revision )
SCRIPT_SVN_REVISION=${SCRIPT_SVN_REVISION:10}
SCRIPT_SVN_URL=$( svn info | grep URL )
SCRIPT_SVN_URL=${SCRIPT_SVN_URL:5}

CURRENT_DIR=`pwd`
BENCHMARK_PATH="$CURRENT_DIR/$BENCHMARK_EXE"
BENCHMARK_DIR=$( dirname $BENCHMARK_PATH )

pushd $BENCHMARK_DIR > /dev/null

BENCHMARK_SVN_REVISION=$( svn info | grep Revision )
BENCHMARK_SVN_REVISION=${BENCHMARK_SVN_REVISION:10}
BENCHMARK_SVN_URL=$( svn info | grep URL )
BENCHMARK_SVN_URL=${BENCHMARK_SVN_URL:5}
BENCHMARK_SVN_STATUS=$( svn st -q | wc -l )
if [ $BENCHMARK_SVN_STATUS != "0" ]; then
    echo "WARNING: not all changes have been committed to the benchmark directory"
fi
EXPERIMENTOR=$( whoami )
MACHINE=$( uname -n )

EXPERIMENT_NAME_SML=${EXPERIMENT_NAME//"-"/"_"}
echo -e "structure $EXPERIMENT_NAME_SML$DATETIME_SML : EXPERIMENT = struct" >> $LOG_FILE

echo "datatype gc = datatype Common.gc" >> $LOG_FILE
echo "datatype gc_stats = datatype Common.gc_stats" >> $LOG_FILE
metadata "problem_name" "\"$EXPERIMENT_NAME\""

metadata "compiler_src_url" "NONE"
metadata "compiler_svn" "NONE"
metadata "script_url" "SOME \"$SCRIPT_SVN_URL\""
metadata "script_svn" "SOME $SCRIPT_SVN_REVISION"
metadata "seq_compilation" "SOME true"
metadata "max_leaf_size" "NONE"
metadata "seq_cutoff" "NONE"

metadata "language" "Common.SML"
metadata "compiler" "\"SMLNJ\""
metadata "version" "\"$SMLNJ_VERSION\""

metadata "bench_url" "\"$BENCHMARK_SVN_URL\""
metadata "bench_svn" "$BENCHMARK_SVN_REVISION"
metadata "input" "\"$SIZE\""
metadata "username" "\"$EXPERIMENTOR\""
metadata "datetime" "\"$DATETIME_MD\""
metadata "machine" "\"$MACHINE\""
metadata "description" "\"$DESCRIPTION\""

# extras
metadata "nTrials" "$NUM_TRIALS"

# Build and run the benchmarks

echo "Logging performance results to $LOG_FILE"

pushd $BENCHMARK_DIR
echo "val runs =" >> $LOG_FILE
for ((i=1;i<=NUM_TRIALS;i+=1)); do
    echo "$SEQUENTIAL_EXE $ARGS"
    RES=$( $SMLNJ_CMD @SMLload=$BENCHMARK_EXE $ARGS )
    if [ $? == "0" ]; then
	echo -n -e "\t\t{ n_procs=0,\t\ttime_sec=" >> $LOG_FILE
	echo -n -e "$RES" >> $LOG_FILE
	echo -n -e ",\t\t" >> $LOG_FILE
	echo -n -e "gc=[]" >> $LOG_FILE
    else
	echo "Benchmark failed unexpectedly with nonzero return code"
	exit 1
    fi
    echo -e ", \t\tcpu_time_sec=NONE,\t\tmax_space_bytes=NONE} ::" >> $LOG_FILE
done
echo -e "\t\tnil" >> $LOG_FILE
popd
